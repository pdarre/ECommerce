@model ECommerce.Models.User

@{
    ViewBag.Title = "Create";
}

<h2>New User</h2>

<div class="container">
    <form action="/Users/Create" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        <div class="form-row">
            <div class="form-group col-md-12">
                <label for="inputAddress">@Html.LabelFor(model => model.UserName)</label>
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @id = "inputAddress", placeholder = "user@mail.com" } })
            </div>
            <div class="form-group col-md-6">
                <label for="txtFirstName">First name</label>
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @id = "txtFirstName", placeholder = "Jhon" } })
            </div>
            <div class="form-group col-md-6">
                <label for="txtLastName">Last name</label>
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @id = "txtLastName", placeholder = "Doe" } })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-12">
                <label for="txtAddress">Address</label>
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @id = "txtAddress", @placeholder = "1234 Main St" } })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label for="txtPhone">Phone</label>
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", id = "txtPhone", placeholder = "503 243756540" } })
            </div>
            <div class="form-group col-md-6">
                <label for="filePhoto">Photo</label>
                @Html.TextBoxFor(modelo => modelo.PhotoFile, new { type = "file", id = "filePhoto", @class = "form-control-file border btn btn-choose" })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-4">
                <label for="dropDepartment">Department</label>
                @Html.DropDownList("DepartmentId", null, htmlAttributes: new { @class = "form-control", @id = "dropDepartment" })
            </div>
            <div class="form-group col-md-4">
                <label for="dropCity">City</label>
                @Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control", @id = "dropCity" })
            </div>
            <div class="form-group col-md-4">
                <label for="dropCompany">Company</label>
                @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control", @id = "dropCompany" })
            </div>
        </div>
        <div class="alert alert-danger collapse" id="alertCity" role="alert">
            Failed to retrieve cities, select other department.
        </div>
        <div class="alert alert-danger collapse" id="alertCompanies" role="alert">
            No companies to show, select other city/department.
        </div>
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-outline-secondary btn-sm" />
            @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-outline-secondary btn-sm" })
        </div>
    </form>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            $("#dropDepartment").change(function () {
                $("#dropCity").empty();
                $('#alertCity').hide();
                $('#alertCompanies').hide();
                $("#dropCity").append('<option value="0">[Select a city...]</option>');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCities")',
                    dataType: 'json',
                    data: { departmentId: $("#dropDepartment").val() },
                    success: function (data) {
                        $.each(data, function (i, data) {
                            $("#dropCity").append('<option value="'
                             + data.CityId + '">'
                             + data.Name + '</option>');
                        });
                    },
                    error: function (ex) {
                        $('#alertCity').show();
                        //alert('Failed to retrieve cities.' + ex);
                    }
                });
                return false;
            })
        });
    </script>
    <script type="text/javascript">
         $(document).ready(function () {
             $("#dropCity").change(function () {
                $("#dropCompany").empty();
                $('#alertCompanies').hide();
                $('#alertCity').hide();
                $("#dropCompany").append('<option value="0">[Select a company...]</option>');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCompanies")',
                    dataType: 'json',
                    data: { cityId: $("#dropCity").val() },
                    success: function (data) {
                        $.each(data, function (i, data) {
                            $("#dropCompany").append('<option value="'
                             + data.CompanyId + '">'
                             + data.Name + '</option>');
                        });
                    },
                    error: function (ex) {
                        $('#alertCompanies').show();
                        //alert('No companies to show.' + ex);
                    }
                });
                return false;
            })
        });
    </script>
}